/**
 * ZnDraw room configuration combining all settings sections.
 *
 * This file is automatically generated by running: python -m zndraw.config
 * Do not edit manually - changes will be overwritten.
 */
/**
 * ZnDraw room configuration combining all settings sections.
 */
export interface RoomConfig {
	Camera: Camera;
	Particle: Particle;
	PathTracer: PathTracer;
	VectorDisplay: VectorDisplay;
	Visualization: Visualization;
	[property: string]: any;
}

export interface Camera {
	camera?: CameraEnum;
	/**
	 * Camera far rendering plane
	 */
	camera_far?: number;
	/**
	 * Camera near rendering plane
	 */
	camera_near?: number;
	/**
	 * Controls
	 */
	controls?: Controls;
	/**
	 * Show camera controls target.
	 */
	crosshair?: boolean;
	/**
	 * Maximum frames per second
	 */
	fps?: number;
	/**
	 * Synchronize camera with other room members.
	 */
	synchronize_camera?: boolean;
	[property: string]: any;
}

export type CameraEnum = "PerspectiveCamera" | "OrthographicCamera";

/**
 * Controls
 */
export type Controls = "OrbitControls" | "TrackballControls";

export interface Particle {
	/**
	 * Bonds Size
	 */
	bond_size?: number;
	/**
	 * Hover opacity
	 */
	hover_opacity?: number;
	/**
	 * Material
	 */
	material?: Material;
	/**
	 * Particle Size
	 */
	particle_size?: number;
	/**
	 * Selection color
	 */
	selection_color?: string;
	/**
	 * Selection opacity
	 */
	selection_opacity?: number;
	/**
	 * Show bonds
	 */
	show_bonds?: boolean;
	[property: string]: any;
}

/**
 * Material
 */
export type Material =
	| "MeshBasicMaterial"
	| "MeshPhysicalMaterial"
	| "MeshStandardMaterial"
	| "MeshToonMaterial";

/**
 * Experimental path tracer settings.
 */
export interface PathTracer {
	/**
	 * Clearcoat
	 */
	clearcoat?: number;
	/**
	 * Clearcoat Roughness
	 */
	clearcoatRoughness?: number;
	enabled?: boolean;
	environment?: EnvironmentPreset;
	/**
	 * Metalness
	 */
	metalness?: number;
	/**
	 * Roughness
	 */
	roughness?: number;
	[property: string]: any;
}

export type EnvironmentPreset =
	| "none"
	| "apartment"
	| "city"
	| "dawn"
	| "forest"
	| "lobby"
	| "night"
	| "park"
	| "studio"
	| "sunset"
	| "warehouse";

export interface VectorDisplay {
	/**
	 * Min and max values for color mapping
	 */
	colorrange?: any[];
	/**
	 * Default HSL colormap for vector fields (blue to red)
	 */
	default_colormap?: Array<any[]>;
	/**
	 * Normalize vector lengths
	 */
	normalize?: boolean;
	/**
	 * Arrow transparency
	 */
	opacity?: number;
	/**
	 * Scale arrow thickness based on vector magnitude
	 */
	scale_vector_thickness?: boolean;
	/**
	 * Color for each vector
	 */
	vector_colors?: { [key: string]: string };
	/**
	 * Rescale Vectors
	 */
	vector_scale?: number;
	/**
	 * Show vectorfield.
	 */
	vectorfield?: boolean;
	/**
	 * Visualize vectorial property
	 */
	vectors?: string[];
	[property: string]: any;
}

export interface Visualization {
	/**
	 * Automatically restart animation when finished.
	 */
	animation_loop?: boolean;
	/**
	 * Show the floor.
	 */
	floor?: boolean;
	/**
	 * Jump to updated frames.
	 */
	frame_update?: boolean;
	/**
	 * Show the simulation box.
	 */
	simulation_box?: boolean;
	[property: string]: any;
}

// Default configuration values from pydantic models
export const DEFAULT_ROOM_CONFIG: RoomConfig = {
	Particle: {
		particle_size: 1.0,
		bond_size: 1.0,
		show_bonds: true,
		material: "MeshStandardMaterial",
		selection_color: "#ffa500",
		hover_opacity: 0.8,
		selection_opacity: 0.5,
	},
	Visualization: {
		simulation_box: true,
		floor: false,
		frame_update: true,
		animation_loop: false,
	},
	Camera: {
		camera: "PerspectiveCamera",
		camera_near: 0.1,
		camera_far: 300,
		crosshair: false,
		synchronize_camera: true,
		fps: 30,
		controls: "OrbitControls",
	},
	PathTracer: {
		enabled: false,
		environment: "studio",
		metalness: 0.7,
		roughness: 0.2,
		clearcoat: 0.0,
		clearcoatRoughness: 0.0,
	},
	VectorDisplay: {
		vectorfield: true,
		vectors: [],
		vector_scale: 1.0,
		vector_colors: {},
		normalize: true,
		scale_vector_thickness: false,
		opacity: 1.0,
		colorrange: [0.0, 1.0],
		default_colormap: [
			[0.66, 1.0, 0.5],
			[0.0, 1.0, 0.5],
		],
	},
};
